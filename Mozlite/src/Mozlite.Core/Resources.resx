<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Administrator" xml:space="preserve">
    <value>管理员</value>
  </data>
  <data name="ArgumentIsEmpty" xml:space="preserve">
    <value>The string argument '{0}' cannot be empty.</value>
  </data>
  <data name="ArgumentPropertyNull" xml:space="preserve">
    <value>The property '{0}' of the argument '{1}' cannot be null.</value>
  </data>
  <data name="ArgumentStatus_Completed" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="ArgumentStatus_Disabled" xml:space="preserve">
    <value>禁用</value>
  </data>
  <data name="ArgumentStatus_Failured" xml:space="preserve">
    <value>失败</value>
  </data>
  <data name="ArgumentStatus_Normal" xml:space="preserve">
    <value>正常</value>
  </data>
  <data name="BrowserTitle" xml:space="preserve">
    <value>浏览文件</value>
  </data>
  <data name="CollectionArgumentIsEmpty" xml:space="preserve">
    <value>The collection argument '{0}' must contain at least one element.</value>
  </data>
  <data name="DataAction_Created" xml:space="preserve">
    <value>恭喜你，你已经成功添加了“{0}”！</value>
  </data>
  <data name="DataAction_CreatedFailured" xml:space="preserve">
    <value>很抱歉，添加“{0}”失败了！</value>
  </data>
  <data name="DataAction_Deleted" xml:space="preserve">
    <value>恭喜你，你已经成功删除了所选择的{0}！</value>
  </data>
  <data name="DataAction_DeletedFailured" xml:space="preserve">
    <value>很抱歉，删除“{0}”失败了！</value>
  </data>
  <data name="DataAction_Duplicate" xml:space="preserve">
    <value>很抱歉，“{0}”已经存在，操作失败!</value>
  </data>
  <data name="DataAction_Success" xml:space="preserve">
    <value>恭喜你，你已经成功完成了“{0}”！</value>
  </data>
  <data name="DataAction_UnknownError" xml:space="preserve">
    <value>很抱歉，发生了未知错误，操作失败，请重试！</value>
  </data>
  <data name="DataAction_Updated" xml:space="preserve">
    <value>恭喜你，你已经成功更新了“{0}”！</value>
  </data>
  <data name="DataAction_UpdatedFailured" xml:space="preserve">
    <value>很抱歉，更新“{0}”失败了！</value>
  </data>
  <data name="DuplicateAnnotation" xml:space="preserve">
    <value>'{0}'添加错误，因为已经存在一个同样名称的扩展属性！</value>
  </data>
  <data name="InvalidEntityType" xml:space="preserve">
    <value>The entity type '{0}' provided for the argument '{1}' must be a reference type.</value>
  </data>
  <data name="InvalidPropertiesExpression" xml:space="preserve">
    <value>The properties expression '{0}' is not valid. The expression should represent a property access: 't =&gt; t.MyProperty'. When specifying multiple properties use an anonymous type: 't =&gt; new {{ t.MyProperty1, t.MyProperty2 }}'.</value>
  </data>
  <data name="InvalidPropertyExpression" xml:space="preserve">
    <value>The expression '{0}' is not a valid property expression. The expression should represent a property access: 't =&gt; t.MyProperty'.</value>
  </data>
  <data name="LastPage" xml:space="preserve">
    <value>上一页</value>
  </data>
  <data name="MediaFileUploadPathIsError" xml:space="preserve">
    <value>上传路径不正确，当前文件所属实例不明确！</value>
  </data>
  <data name="MigrationError" xml:space="preserve">
    <value>The migration is error:{0}.</value>
  </data>
  <data name="NextPage" xml:space="preserve">
    <value>下一页</value>
  </data>
  <data name="NoGetter" xml:space="preserve">
    <value>The property '{0}' of entity type '{1}' does not have a getter. </value>
  </data>
  <data name="NoSetter" xml:space="preserve">
    <value>The property '{0}' of entity type '{1}' does not have a setter.</value>
  </data>
  <data name="NumberPage" xml:space="preserve">
    <value>第{0}页</value>
  </data>
  <data name="ObjectStatus_Disabled" xml:space="preserve">
    <value>禁用</value>
  </data>
  <data name="ObjectStatus_Normal" xml:space="preserve">
    <value>正常</value>
  </data>
  <data name="ObjectStatus_PaddingApproved" xml:space="preserve">
    <value>等待验证</value>
  </data>
  <data name="ObjectStatus_Spider" xml:space="preserve">
    <value>采集</value>
  </data>
  <data name="PleaseSelectFirstAndThenUpload" xml:space="preserve">
    <value>请先选择文件后在进行上传！</value>
  </data>
  <data name="PrimaryKeyIsAlreadySetted" xml:space="preserve">
    <value>表格的主键已经设置过了，不能重复设置！</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>会员</value>
  </data>
  <data name="TaskExecuteError" xml:space="preserve">
    <value>[服务]{0}执行错误：{1}。</value>
  </data>
  <data name="UnknownOperation" xml:space="preserve">
    <value>The operation of '{0}' cannot be found in '{1}'.</value>
  </data>
  <data name="UnsupportedRecurse" xml:space="preserve">
    <value>实体“{0}”不支持递归查询！</value>
  </data>
  <data name="UnsupportedType" xml:space="preserve">
    <value>The data type of '{0}' is not supported.</value>
  </data>
  <data name="UploadFailured" xml:space="preserve">
    <value>上传文件失败，请重试！</value>
  </data>
  <data name="UploadSuccess" xml:space="preserve">
    <value>你已经成功上传了文件！</value>
  </data>
</root>